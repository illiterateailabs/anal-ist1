# Analyst's Augmentation Agent - Backend Dockerfile (UV Version)
# Multi-stage build using UV package manager for faster, more reliable dependency resolution

# Build stage
FROM python:3.11-slim AS builder

# Set working directory
WORKDIR /app

# Install system dependencies including UV prerequisites
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    curl \
    python3-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install UV - the faster Python package installer with better dependency resolution
RUN curl -sSf https://astral.sh/uv/install.sh | sh

# Copy requirements and constraints files
COPY requirements.txt constraints.txt ./

# Install Python dependencies with UV (faster and more reliable than pip)
# First upgrade setuptools and wheel
RUN /root/.cargo/bin/uv pip install --upgrade setuptools wheel

# Install all dependencies with UV - it handles dependency resolution better than pip
RUN /root/.cargo/bin/uv pip install \
    --system \
    --no-cache \
    --requirement requirements.txt \
    # UV doesn't have a direct equivalent to pip's constraints file, but we can use
    # the constraints.txt file to guide UV's dependency resolution
    $(cat constraints.txt | grep -v "#" | sed 's/$/,/g' | tr -d '\n' | sed 's/,$//g')

# Final stage
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy installed packages from builder stage
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Create non-root user
RUN useradd -m -r -u 1000 appuser

# Create logs directory and set permissions
RUN mkdir -p /app/logs && \
    chown -R appuser:appuser /app

# Copy application code
COPY --chown=appuser:appuser backend /app/backend

# Expose port
EXPOSE 8000

# Switch to non-root user
USER appuser

# Set Python path
ENV PYTHONPATH=/app

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Command to run the application
CMD ["uvicorn", "backend.main:app", "--host", "0.0.0.0", "--port", "8000"]
